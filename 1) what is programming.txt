
1) what is programming?

Programming is simply the act of entering instructions for the computer to perform.
some example instructions
“Do this; then do that.”
“If this condition is true, perform this action; otherwise, do that action.”
“Do this action exactly 27 times.”
“Keep doing that until this condition is true.”
what is the difference between the statment and expression?
the main difference between a statement and an expression in Python is that a statement performs 
some action or operation, while an expression evaluates to a value.
name1.py

name = ""
while name != "YOUrname":
    print("yourname")
    name = input()
print("thank")

name2.py
while True:
   print("your name")
   name = input()
   if name == yourname:
       break
print("Thankyou")
.gustname.py

name = ''
while not name:
    print('Enter your name:')
    name = input()
print('How many guests will you have?')
numOfGuests = int(input())
if numOfGuests:
    print('Be sure to have enough room for all your guests.')
print('Done')


gussgame.py

	# This is a guess the number game.
2	import random
3	secretNumber = random.randint(1, 20)
4	print('I am thinking of a number between 1 and 20.')
5	
6	# Ask the player to guess 6 times.
7	for guessesTaken in range(1, 7):
8	    print('Take a guess.')
9	    guess = int(input())
10	
11	    if guess < secretNumber:
12	        print('Your guess is too low.')
13	    elif guess > secretNumber:
14	        print('Your guess is too high.')
15	    else:
16	        break    # This condition is the correct guess!
17	
18	if guess == secretNumber:
19	    print('Good job! You guessed my number in ' + str(guessesTaken) + ' guesses!')
20	else:
21	    print('Nope. The number I was thinking of was ' + str(secretNumber))






def collatz(number):
    if number % 2 == 0:  # number is even
        result = number // 2
        print(result)
    else:  # number is odd
        result = 3 * number + 1
        print(result)
    return result

def main():
    while True:
        try:
            number = int(input("Enter a positive integer: "))
            if number <= 0:
                print("Please enter a positive integer.")
            else:
                break
        except ValueError:
            print("Please enter a valid integer.")

    while number != 1:
        number = collatz(number)

if __name__ == '__main__':
    main()



####################################################
vendering machine

class VendingMachine:
    def __init__(self, num_items, item_price):
        self.num_items = num_items
        self.item_price = item_price

    def buy(self, req_items, money):
        cost = req_items * self.item_price
        if req_items > self.num_items:
            raise ValueError("Not enough items in the machine")
        elif money < cost:
            raise ValueError("Not enough coins")
        else:
            change = money - cost
            self.num_items -= req_items
            return change





